import java.util.Stack;

public class Solution {
    public String decodeString(String s) {
        Stack<Integer> countStack = new Stack<>();
        Stack<String> stringStack = new Stack<>();
        String current = "";
        int k = 0;

        for (char ch : s.toCharArray()) {
            if (Character.isDigit(ch)) {
                // Building the multiplier for brackets
                k = k * 10 + (ch - '0');
            } else if (ch == '[') {
                // Push the current number and string onto the stack
                countStack.push(k);
                stringStack.push(current);
                // Reset the current string and the multiplier
                current = "";
                k = 0;
            } else if (ch == ']') {
                // Pop the number of times to repeat the string
                int repeatTimes = countStack.pop();
                StringBuilder decodedString = new StringBuilder(stringStack.pop());
                // Build the string with repeated sequence
                for (int i = 0; i < repeatTimes; i++) {
                    decodedString.append(current);
                }
                current = decodedString.toString();
            } else {
                // Building the current sequence of characters
                current += ch;
            }
        }

        return current;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        System.out.println(solution.decodeString("3[a]2[bc]")); // Output: "aaabcbc"
        System.out.println(solution.decodeString("3[a2[c]]")); // Output: "accaccacc"
        System.out.println(solution.decodeString("2[abc]3[cd]ef")); // Output: "abcabccdcdcdef"
    }
}
